---

- name: Check if config variable passed
  fail:
    msg: "firewall configuration has not been defined"
  when: firewall|default(False) == False

- name: Install iptables-persistant
  action: apt name=iptables-persistent state=present

- name: Install UFW
  action: apt name=ufw state=present

- name: Make sure iptables is started
  service: name=ufw state=started

- name: Make sure iptables-persistent is started
  service: name=iptables-persistent state=started

- name: Get iptables rules
  shell: iptables -L
  register: iptablesrules
  always_run: yes

- name: Flush rules
  shell: "{{ item }}"
  with_items:
      - /sbin/iptables -F OUTPUT
      - /sbin/iptables -F INPUT

- name: Set input TCP rules
  command: /sbin/iptables -A INPUT -p tcp -s {{ item.ip }} --dport {{ item.port }} -j ACCEPT -m state --state NEW,ESTABLISHED -m comment --comment "{{ item.name }}"
  #when: iptablesrules.stdout.find({{ item.name }}) == -1
  with_items: "{{firewall}}"
  
- name: Allow only current connections
  shell: "{{ item }}"
  with_items:
    - /sbin/iptables -A OUTPUT -o lo -j ACCEPT
    #- /sbin/iptables -A OUTPUT -m state --state ESTABLISHED -j ACCEPT
    #- /sbin/iptables -A OUTPUT -j REJECT
    - /sbin/iptables -A INPUT -i lo -j ACCEPT
    #- /sbin/iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT
    - /sbin/iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    - /sbin/iptables -A INPUT -j REJECT
  
#- name: Set unlimited traffic for loopback
#  shell: /sbin/iptables -A {{ item }} lo -j ACCEPT
#  with_items:
#      - "INPUT -i"
#      - "OUTPUT -o"

- name: Save iptables
  shell: iptables-save > /etc/iptables/rules.v4
  
- name: Restart iptables
  service:
    name: ufw
    state: restarted
  
